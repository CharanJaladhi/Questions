The warehouse of an e-commerce company has limited stock available for each item due to a promotional sale. The company needs to distribute this stock to its distribution center in a particular manner. If the value of the available stock for an item is an even number, then the total stock is divided by 2. If it is an odd number, 1 is subtracted from it. The company wishes to know how many distributions can rake place before the stock reaches 0. 

Write an algorithm to calculate the number of distribution that can take place before the stock reaches 0.

Input
The input consists of an integer - numStocks, representing the stock available for the item(N)

Output 
Print an integer value representing the number of distributions that can take place before the stock reaches 0. 

Constraint 
0<= numStocks <= 10^9

Example
Input
12

Output
5

Explanation
12 is even, 12/2 is 6
6 is even, 6/2 is 3
3 is odd, 3-1 is 2
2 is even, 2/2 is 1
1 is odd, 1-1 is 0
The total number of distribution is 5

1.find output:
1.
void main()
{
 int i;
 for(i=1 ; i<4 ; i++)
 switch(i)
 case 1: printf("%d",i); break;
 {
  case 2: printf("%d",i); break;
  case 3: printf("%d",i); break;
 }
  switch(i)
  case 4: printf("%d",i); break;
}


2.
void main()
{
 char * s="12345s\n";
 printf("%d",sizeof(s));
}

3.
void main()
{
 static int i=3;
 printf("%d",i--);
 return i>0 ? main():0;
}



5.
void main()
{
 int i;
char a[]="String";
char *p = "New String";
char *temp;
temp=a;
a=malloc(strlen(p)+1);
strcpy(a,p);
p=malloc(strlen(temp)+1);
strcpy(p,temp);
printf("(%s,%s)",a,p);
free(p);
free(a);
}

a.swap contents of p & a and print: New string, String
b.Generate compilation error in line number 8
c.Generate compilation error in line number 9
d.Generate compilation error in line number 11
e.Generate compilation error in line number 12


6.
int main()
{
  int i,n;
  char * x="Alice";
  n=strlen(x);
  *x='S';
  for(i=0 ; i<=n; i++)
  {
   printf("%s ",x);
   x++;
  }
  printf("\n",x);
  return 0;

}




8.
int main()
{
  union a
  {
    int i;
    char ch[2];
  };
  union a u;
  u.ch[0]=3;
  u.ch[1]=2;
  printf("%d,%d,%d\n",u.ch[0],u.ch[1],u.i);
  return 0;
}



10. int main()
{
 enum days {MON=-1, TUE, WED=6, THU, FRI, SAT};
printf("%d, %d, %d, %d, %d, %d\n", MON, TUE, WED, THU, FRI, SAT); 
return 0;
}

11. int main()
{
 int i=4, j=8;
 printf("%d, %d, %d\n", i|j&j|i,i|j&j|i,i^j);	
 return 0;	
}

12.
 int main()
{
 struct node
 {
  int data;
  float d;
  struct node *link;
  };
 struct node *p, *q;
 p = (struct node *) malloc(sizeof(struct node));
q = (struct node *) malloc(sizeof(struct node)); 
printf("%d, %d\n", sizeof(p), sizeof(q));
return 0;
}

13.
main()
{
int a=0;
int b=20;
char x =1;
char y =0;
if(a,b,x,y)
 printf("hello");
}

14.
main()
{
typedef union
{
int	a;
char	b[10];
float	c;
} Union;
Union x, y = { 100 };
x.a = 50;
strcpy (x.b, "hello"); 
x.c=21.50;
printf ("Union X : %d %s %f\n", x.a, x.b, x.c);
 printf ("Union Y : %d %s %f\n", y.a, y.b, y.c);
return 0;
}

15.
struct point
{
 int x;
 int y; 
};

struct point origin,*pp; 
main()
{
 pp=&origin;
 printf("origin is(%d%d)\n",(*pp).x,(*pp).y);  
printf("origin is (%d%d)\n",pp->x,pp->y);
}

16. 
main()
{
 int i=_l_abc(10);
 printf("%d\n",--i);
}
int _l_abc(int i) 
{
return(i++);
}
17.
char convert(char z)
{
 return z-32;
}
int main()
{
 char c='s',x;
 if((c>='a') && (c<='z'))
   x=convert(c);
 printf("%c",x);
 return 0;
}


18.
main()
{
 int i=-1; 
 +i;
 printf("i = %d, +i = %d \n",i,+i);
} 	

19.main()
{
char not; 
not=!2;
printf("%d",not);
}

20.
#define FALSE -1
#define TRUE 1
#define NULL 0
main() 
{
if(NULL)
   puts("NULL");
else if(FALSE)
  puts("TRUE");
else	
  puts("FALSE");
}

21.
main()
{
 int k=1;
 printf("%d==1  is %s",k,k==1?"TRUE":"FALSE");
}
22.
int i=10;
main()
{
 extern int i;
 {
  int i=20;
 
  printf("%d",i);
 }
 printf("%d",i);
printf("%d",i);
}
	

23. 
#include<stdio.h> 
main()
{		
 int a[2][2][2] ={{10,2,3,4}, {5,6,7,8}};
 int *p,*q;
 p=&a[1][1][1];	
 *q=***a;
 printf("%d..%d",*p,*q);
}

24.
struct aaa
{ 
 struct aaa *prev; 
 int i;
 struct aaa *next;
};
main()
{
struct aaa abc,def,ghi,jkl;
int x=100;
abc.i=0;
abc.prev=&jkl;
abc.next=&def; 
def.i=1;
def.prev=&abc;
def.next=&ghi; 
ghi.i=2;
ghi.prev=&def;
ghi.next=&jkl; 
jkl.i=3;
jkl.prev=&ghi;
jkl.next=&abc;
x=abc.next->next->prev->next->i; 
printf("%d",x);
 }
25.
#include<stdlib.h>
aaa() 
{
printf("hi");
}
bbb() 
{
printf("hello");
}
ccc()
{
printf("bye");
}
main()
{
int (*ptr[3])();
ptr[0]=aaa;
ptr[1]=bbb;
ptr[2]=ccc;
ptr[2]();
}


27.int i;
 main()
 {
 int t,i;
 for(t=4;scanf("%d",&i)-t;printf("%d\n",i))
      printf("%d ",t--);
 }		

28.
Will the following code work?
#include<stdio.h> 
#include<alloc.h>
struct emp
{
int len;
char name[1];
};
int main()	
{
char newname[] = "Rahul";
struct emp *p = (struct emp *) malloc(sizeof(struct emp) -1 + strlen(newname)+ 1);
p->len = strlen(newname);
strcpy(p -> name, newname);
printf("%d %s\n", p->len, p->name); 
return 0;
}



30.
 Which of the following statements 
correct about the below program? 
#include<stdio.h>
int main()
{
 union a
 {
  int i;
  char ch[2];
 };
  union a ul ={ 512};
  union a u2 = {0,2}; 
  return 0;
}
1. u2 CANNOT be initialized as shown.
2. u1 can be initialized as shown.
3. To initialize char ch[] of u2 '.' operator should be used.
4. The code causes an error 'Declaration syntax error'
A. 1,2	
B. 2,3
C. 1,2,3 
D. 1,3,4

31.can you change name of main()?how?


PART # A	
1.int main() {
printf("%d%d%d%d\n",72,072,0x72,0X72);	
return 0;
}

10.int main() 
{
printf("%d\n",sizeof(4)/sizeof(2.0));
printf("%d\n",sizeof(2.0)/sizeof(4)); 
return 0;
}
	
2.int main(){	
printf("%d%o%x",72,72,72);
return 0;
}
11.int main() {
int p,q;
printf("Enter values of p and q\n");
scanf("%d%d",p,q);
printf("p=%d q=%d\n",p,q);
return 0;
}

3.int main(){	
char ch;
int a;
float b;	
printf("bytes occupied by ch=%d\n",sizeof(ch));
printf("bytes occupied by a=%d\n",sizeof(a)) ;	
printf("bytes occupied by b=%d\n",sizeof(b));	
return 0;	
}

PART # B
12.int main() {
int x=10,y=5,p,q;
p=x>9;
q=x>3&& y!=3;
printf("p=%d q=%d \n",p,q);
return 0;
}

4.int main() {	
printf("%d\n",sizeof(char));	
printf("%d\n",sizeof(int));	
printf("%d\n",sizeof(float));
return 0;	
}

13.int main(){
int a=30,b=40,x;
x=(a!=10)&&(b=50);
printf("x=%d\n",x);
return 0;
}

5.int main() 
{
printf("%d\n",sizeof('7'));	
printf("%d\n",sizeof(7));	
printf("%d\n",sizeof(7.0));	
return 0; 
}	

14.int main() {
int x=0,y=1;
y=!x;
x=!y;
printf("x=%d y=%d\n"x,y);
return 0;
}

6.int main() 
  {
 char ch=291; 
 printf("%d%d%c\n",2147483648,ch,ch); 
 return 0;
}
7.
int main() {
float a=5,b=2;
int c;
c=a%b;
printf("%d\n",c); 
return 0;
}

8.
int main() {
int g=300000*300000/300000; 
printf("g=%d\n",g);
return 0;
}


15.int main() 
{
int x=3,y=4,z=4; 
printf("ans=%d\n",(z>=y>=x?100:200)); 
return 0;
}


16.int main() {	
float a=12.25,b=13.65;	
if(a=b)	
printf("a and b equal");	
else	
printf("a and b not equal");	
return 0;
}

23.
int main() {
int i=1;
for(;i++;)
printf("%d\n",i);
return 0;
}	
24.int main(){
int x=3,y,z;
z=y=x;
z*=y=x*x;
printf("x=%d y=%d z=%d\n",x,y,z);
return 0;
}

17.
int main() {	
if('Z' < 'z' )	
 printf("Pilots are on strike...\n");
else	
 printf("for absolutely outlandish demands\n");	
return 0;
}
25.int main() {
int x=3,z;
z=x/++x;
printf(x=%d z=%d\n",x,z);
return 0;
}
18.int main() {
float a=0.7;	
if(a<0.7)	
printf("Stoned\n");	
else	
printf("Avenged\n");	
return 0;	
}


19.int main() {	
int c=0,d=5,e=10,a;	
a=c>1?d>1||e>1?100:200:300;	}
printf("a=%d\n",a);
return 0;


20.
int main() {	
float a=0.5,b=0.9;	
if(a&&b>0.9)	
printf("tce-cse-a\n");	
else	
printf("tce-cse-b\ n");
return 0;	
}

int main() {
int x,y,z;
x=y=z=1;
z=++x || ++y &&	++z;
printf("x=%d y=%d z=%d\n",x,y,z);
return 0;
}

28.int main() {
int x,y,z;
x=y=z=1;
z=++x && ++y ||	++z;
printf("x=%d y=%d z=%d\n",x,y,z);
return 0;
}

#PART C	
21.
 int main() {	
int i=1,j=1;
for(;j;printf("%d %d\n",i,j))
 j= i++<=5;	
return 0;	
}
#PART D
29.
int main() {
int i=3;
switch(i)
{
 case 1:
 printf("cse\n");
 case 2:
 printf("it \n");
 break;
case 3:
 continue;
default:
printf("goodbye");
}
return 0;
}




#include<stdio.h>
void main()
{
   printf("%s %s",("Zoho" "corp"), ("Campus"
                                     "corpp"),("Zoho" "Corporation"));
}


unsigned int i=650000;
    while(i++!=0)
    {
    printf(“%d”,i);
    }

int i;
for(i=0;i++;printf(“%d”,i));
printf(“%d”,i);

 int a=0,b=0;
    if(a++&&b++)
    printf(“%d%d”,a,b);
    else
    printf(“great”);


enum SWITCH{off,on};
main()
{
enum SWITCH s= on;
printf(“size of enumeration %d \n”, sizeof(enum SWITCH));
printf(“size of object s is %d \n”,sizeof(s));
}


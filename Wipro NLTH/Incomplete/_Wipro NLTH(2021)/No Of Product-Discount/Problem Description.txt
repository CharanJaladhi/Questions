 An e-commerce company is planning to give a special discount on all its product to its customers for the Christmas holiday. The company possesses data on its stock Of N product types. The data for each product type represents the count of customers who have ordered the given product. If the data K is positive then it shows that the product has been ordered by K customers and is in stock. If the data K is negative then it shows that it has been ordered by K customers but is not in stock. The company will fulfill the order directly if the ordered product is in stock, If it is not in Stock, then the company will fulfill the order after they replenish the stock from the warehouse. They are planning to offer a discount amount A for each product. The discount value will be distributed to the customers who have purchased that selected product. The discount will be distributed only if the decided amount A can be divided by the number of orders for a particular product 

Write an algorithm for the sales team to find the number of products out of N for which the discount will be distributed 

Input
The first line of the input consists of two space-separated integers - numOfProducts and disAmount, representing the number of different types of products(N) and the discount amount that will be distributed among the customers. 

The second line consists of N space-separated integers - order1, order2 ... orderN representing the current status of the stock for the respective product types

Output
Print an integer representing the number of products out of N for which the discount will be distributed 
 
Constraints
0<= numOfProducts, disAmount <= 10^5
-10^6 <= order(i) <= 10^6
0<= i < numOfProducts

Example
Input
7 18
9 -13 8 -7 -8 18 10

Output
2

Explanation
The product for which the number of customers will collect the discount amount "3" are for product types 0 and 5, i.e 9 
Martin follows his father for a morning jog. His father starts at a position which is X1 meters away from their home and runs rectilinearly at a constant speed of v1 meters per step for N steps

Martin is standing at X2 meters away from his home. He wonders as to how fast he must run at some constant speed of v2 meters per step so as to maximize F, where F equals the number of father's footsteps visited by Martin during his run. It is given that the first step that Martin will land at, from his starting position, will have to be visited by his father

Note that if more than one prospective velocities of martin result in the same number of maximum common steps, output the highest prospective velocity as V2.

Write an algorithm to help martin calculate F and V2

Input
The input to the function/method consists of four arguments-
positionOfFather, an integer representing the initial position of the father(X1)
positionOfSon, an integer representing the initial position of the son(X2)
speed, an integer representing the speed of the father(V1)
steps, an integer representing the number of steps taken by his father(N)

Output
Return a list consisting of two integers representing the maximum number of common footsteps F and the respective speed of son(V2)

Constraints
1<=positionOfFather<=10^5
0<=positionOfSon<=positionOfFather
1<=speed<=10^5
1<=steps<=10^5
